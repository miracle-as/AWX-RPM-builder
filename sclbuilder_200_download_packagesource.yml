---

- name: Initial database seed
  hosts: prod_sclbuilder_worker
  tasks:
  - name: Add the user 'sclbuilder'
    ansible.builtin.user:
      name: sclbuilder
      comment: service account for scl create
    become: True


  - name: Install rhel
    ansible.builtin.package:
      name: 
        - redis
        - python38-psycopg2
        - python38-pip
        - python38-devel
        - python3-devel
        - python3-requests
        - python38-requests
        - wget
        - rpm-build
        - scl-utils-build
        - scl-utils
        - help2man
        - unzip
        - openssl-devel
        - libtool-ltdl-devel
        - python3-sphinx
        - make
        - gcc
        - libffi-devel
        - openldap-devel
        - libxml2-devel
        - xmlsec1-devel 
        - xmlsec1-openssl-devel
        - libpq-devel
        - platform-python-devel
      state: present

  - name: Install bottle python package
    pip:
      name: 
        - requests
        - requirements-parser
        - spec2scl
        - setuptools_rust
        - wheel


  - name: Install psyorg in the platforn python
    command: /usr/libexec/platform-python -m pip install psycopg2-binary 
    become: True

  - name: Install setuptools_rust in the platforn python
    command: /usr/libexec/platform-python -m pip install setuptools_rust
    become: True

  
  - name: Simple select query to acme db
    postgresql_query:
      db: sclbuilder
      login_host: sclbuilder
      login_user: "sclbuilder"
      login_password: "django2know"
      query: SELECT version()
    become: yes
    become_user: sclbuilder

  - name: Select the all packages where packagesourcefileurl is NULL
    postgresql_query:
      db: sclbuilder
      login_host: sclbuilder
      login_user: "sclbuilder"
      login_password: "django2know"
      query: select * from  projects_package where packagesourcefileurl IS NULL;
    register: sourceurlmissingpackages
    become: yes
    become_user: sclbuilder

  - name: Set them to building
    postgresql_query:
      db: sclbuilder
      login_user: "sclbuilder"
      login_host: sclbuilder
      login_password: "django2know"
      query: >-
        update projects_package set packagestatus = 'Building', 
        packagesourcefilestatus = 'Building' , 
        packagesourcefileurl = 'http://repos.pip2scl.dk/SOURCES/{{ item.packagename }}-{{ item.packageversion}}.tar.gz'  
        where id = {{ item.id }} ; 
    register: adoptedpackages
    become: yes
    become_user: sclbuilder
    with_items:
    - "{{ sourceurlmissingpackages.query_all_results.0 }}"


  - name: Select the new ones 
    postgresql_query:
      db: sclbuilder
      login_host: sclbuilder
      login_user: "sclbuilder"
      login_password: "django2know"
      query: select * from  projects_package where packagesourcefilestatus 	IS NULL;;
    register: newpackages
    become: yes
    become_user: sclbuilder
  
  - name: Set them to building
    postgresql_query:
      db: sclbuilder
      login_host: sclbuilder
      login_user: "sclbuilder"
      login_password: "django2know"
      query: "update projects_package set packagesourcefilestatus = 'Building'  where id = {{ item.id }} ; " 
      #query: "update projects_package set packagesourcefilestatus = 'Building', packagesourcefileurl = 'http://repos.pip2scl.dk/SOURCES/{{ item.packagename }}-{{ item.packageversion}}.tar.gz'  where id = {{ item.id }} ; " 
    register: adoptedpackages
    become: yes
    become_user: sclbuilder
    with_items:
    - "{{ newpackages.query_all_results.0 }}"


  - name: Select the building candidates
    postgresql_query:
      login_host: sclbuilder
      db: sclbuilder
      login_user: "sclbuilder"
      login_password: "django2know"
      query: select packagename, packageversion from  projects_package where packagesourcefilestatus = 'Building';
    register: buildingsource
    become: yes
    become_user: sclbuilder
  
  - name: Copy the downloader script
    ansible.builtin.template:
      src: sclbuilder_download.sh.j2
      dest: /usr/local/bin/sclbuilder_download.sh
      owner: root
      group: root 
      mode: '0755'
    become: yes

  - name: Copy the downloader python script
    ansible.builtin.template:
      src: pip-downloader.py.j2
      dest: /usr/local/bin/pip-downloader.py
      owner: root
      group: root 
      mode: '0755'
    become: yes

  - name: Copy the downloar create original spec name
    ansible.builtin.template:
      src:  sclbuilder_create_original_specfile.sh.j2
      dest: /usr/local/bin/sclbuilder_create_original_specfile.sh
      owner: root
      group: root 
      mode: '0755'
    become: yes

  - name: Copy the downloader env script
    ansible.builtin.template:
      src:  setbuildenv.sh.j2
      dest: /usr/local/bin/setbuildenv.sh
      owner: root
      group: root 
      mode: '0755'
    become: yes

  - name: Run download on our targets
    command: "/usr/local/bin/sclbuilder_download.sh {{ item.packagename }}=={{ item.packageversion }}"
    become: yes
    register: download
    with_items:
    - "{{ buildingsource.query_all_results.0 }}"

  - name: Run download on our targets
    uri:
      url: "http://repos.pip2scl.dk/SOURCES/{{ item.packagename }}-{{ item.packageversion }}.tar.gz"
    register: urlcheck
    with_items:
    - "{{ buildingsource.query_all_results.0 }}"


  - name: Run download on our targets
    command: "/usr/local/bin/sclbuilder_create_original_specfile.sh  {{ item.packagename }}=={{ item.packageversion }}"
    become: yes
    register: orgspecfile
    with_items:
    - "{{ buildingsource.query_all_results.0 }}"

  - name: Run download on our targets
    uri:
      url: "http://repos.pip2scl.dk/SOURCES/{{ item.packagename }}-{{ item.packageversion }}.tar.gz"
    register: urlcheck
    with_items:
    - "{{ buildingsource.query_all_results.0 }}"

#  - debug: 
#      var: urlcheck


  - name: update database if based on curl
    postgresql_query:
      login_host: sclbuilder
      db: sclbuilder
      login_user: "sclbuilder"
      login_password: "django2know"
      query: "update projects_package set packagesourcefilestatus = 'Completed' where  packagesourcefileurl = '{{ item.url }}' ; " 
    register: completed
    become: yes
    become_user: sclbuilder
    with_items:
      - "{{ urlcheck.results }}"
    when:  item.status == 200


  - debug: 
      var: completed