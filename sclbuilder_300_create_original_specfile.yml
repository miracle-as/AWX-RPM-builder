---

- name: Initial database seed
  hosts: prod_sclbuilder_worker
  tasks:
  - name: Simple select query to acme db
    postgresql_query:
      db: sclbuilder
      login_host: sclbuilder
      login_user: "sclbuilder"
      login_password: "django2know"
      query: SELECT version()
    become: yes
    become_user: sclbuilder

  - name: Select the all packages where packageorgspecfileurl is NULL
    postgresql_query:
      db: sclbuilder
      login_host: sclbuilder
      login_user: "sclbuilder"
      login_password: "django2know"
      query: select * from  projects_package where packageorgspecfileurl IS NULL;
    register: orgspecurlmissingpackages
    become: yes
    become_user: sclbuilder

  - name: Set them to building
    postgresql_query:
      db: sclbuilder
      login_user: "sclbuilder"
      login_host: sclbuilder
      login_password: "django2know"
      query: "update projects_package set packageorgspecfilestatus = 'Building' , packageorgspecfileurl = 'http://repos.pip2scl.dk/SPECS/{{ item.packagename }}-{{ item.packageversion}}.original.SPEC'  where id = {{ item.id }} ; " 
    register: adoptedpackages
    become: yes
    become_user: sclbuilder
    with_items:
    - "{{ orgspecurlmissingpackages.query_all_results.0 }}"


  - name: Select the new ones 
    postgresql_query:
      db: sclbuilder
      login_host: sclbuilder
      login_user: "sclbuilder"
      login_password: "django2know"
      query: select * from  projects_package where packageorgspecfilestatus 	IS NULL;;
    register: newpackages
    become: yes
    become_user: sclbuilder
  
  - name: Set them to building
    postgresql_query:
      db: sclbuilder
      login_host: sclbuilder
      login_user: "sclbuilder"
      login_password: "django2know"
      query: "update projects_package set packageorgspecfilestatus = 'Building'  where id = {{ item.id }} ; " 
    register: adoptedpackages
    become: yes
    become_user: sclbuilder
    with_items:
    - "{{ newpackages.query_all_results.0 }}"


  - name: Select the building candidates
    postgresql_query:
      db: sclbuilder
      login_host: sclbuilder
      login_user: "sclbuilder"
      login_password: "django2know"
      query: select packagename, packageversion from  projects_package where packageorgspecfilestatus = 'Building';
    register: buildingresult
    become: yes
    become_user: sclbuilder
  
  - name: Copy the rpmbuilder script
    ansible.builtin.template:
      src: sclbuilder_create_original_specfile.sh.j2
      dest: /usr/local/bin/sclbuilder_create_original_specfile.sh
      owner: root
      group: root 
      mode: '0755'
    become: yes
  
  - name: Copy the downloader env script
    ansible.builtin.template:
      src:  setbuildenv.sh.j2
      dest: /usr/local/bin/setbuildenv.sh
      owner: root
      group: root 
      mode: '0755'
    become: yes

  - name: Run sclbuilder_buildrpm.sh  on our targets
    command: "/usr/local/bin/sclbuilder_create_original_specfile.sh {{ item.packagename }}=={{ item.packageversion }}"
    become: yes
    register: specfiles
    with_items:
    - "{{ buildingresult.query_all_results.0 }}"

  - name: Run download on our targets
    uri:
      url: "http://repos.pip2scl.dk/SPECS/{{ item.packagename }}-{{ item.packageversion }}.original.spec"
    register: urlcheck
    with_items:
    - "{{ buildingresult.query_all_results.0 }}"

  - debug: 
      var: urlcheck


  - name: update database if based on curl
    postgresql_query:
      db: sclbuilder
      login_host: sclbuilder
      login_user: "sclbuilder"
      login_password: "django2know"
      query: "update projects_package set packageorgspecfilestatus = 'Completed' where  packageorgspecfileurl = '{{ item.url }}' ; " 
    register: result
    become: yes
    become_user: sclbuilder
    with_items:
      - "{{ urlcheck.results }}"
    when:  item.status == 200


  - debug: 
      var: result